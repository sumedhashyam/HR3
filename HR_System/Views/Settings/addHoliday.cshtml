@model DAO.Holiday
@{
    ViewBag.Title = "addHoliday";
    Layout = "~/Views/Shared/Main_Layout.cshtml";
}
<script>
    $(document).ready(function () {
        // hr.loadEditHolidayPV();
        $(".mws-datepicker").datepicker({
            //showOtherMonths: true
        });

        if ($("#CountryID").length > 0) {
            SetDefaultCountry();
        }
    });


    function SetDefaultCountry() {
        var currentCountry = $('#hfCurrentCountry').val();
        $('#CountryID').val(currentCountry);
    }

    function getOfficeLocation(ddl) {
        $('#LocationID').html('');
        var countryID = $(ddl).val();
        $('#LocationID').append("<option value=''>Select</option>");
        if (!isNullOrEmpty(countryID)) {
            doAjax(settingController + "getOfficeLocations", { countryID: countryID }, function (data) {
                $.each(data, function (i) {
                    $('#LocationID').append("<option value=" + data[i].value + ">" + data[i].text + "</option>");
                });

            });
        }

    }
</script>
<h2>Add Holiday</h2>
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")"></script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<input type="hidden" id="hfCurrentCountry" value="@ViewBag._countryID" />
@{Html.RenderPartial("Notification");}
<div id="main-content" class="row-fluid">
    <div class="mws-panel grid_8">
        <div class="mws-panel-header">

            <span style="width: 200px; display: inline-block;">Add New Holiday</span>
            <div class="toolbar">
                @Html.ActionLink("Back", "Holidays", "Settings", null, new { })
            </div>
        </div>
        <div class="mws-panel-body no-padding">

            @using (Html.BeginForm("addHoliday", "Settings", FormMethod.Post, new { @class = "mws-form" }))
            {
                @Html.ValidationSummary(true)
                DateTime evdate = new DateTime();
                if (ViewBag._Date != null)
                {
                    evdate = ViewBag._Date;
                }
                <div id="mws-validate-error" class="mws-form-message error" style="display: none;"></div>
                <div class="mws-form-inline">

                    @if (ViewData["countryList"] != null)
                    { 
                        <div class="mws-form-row">
                            <label class="mws-form-label">Country</label>
                            <div class="mws-form-item">
                                @Html.DropDownList("CountryID", (List<SelectListItem>)ViewData["countryList"], new { @class = "large", onchange = "getOfficeLocation(this)" })
                                @Html.ValidationMessageFor(model => model.CountryID)
                            </div>
                        </div>
                    }
                    else
                    {
                        <input type="hidden" name="countryID" value="@ViewBag._countryID" />
                    }


                    <div class="mws-form-row">
                        <label class="mws-form-label">Office Location</label>
                        <div class="mws-form-item">

                            @{ List<SelectListItem> LocationList = (List<SelectListItem>)ViewData["LocationForHoliday"];  
                            }


                            @*new {  @class="large"  }*@
                            @Html.DropDownListFor(model => model.LocationID, LocationList, new { @class = "large" })

                            @Html.ValidationMessageFor(model => model.LocationID)


                            @*       @Html.TextBoxFor(model => model.HolidayName, new { @class = "large" })
                            @Html.ValidationMessageFor(model => model.HolidayName)*@
                        </div>
                    </div>


                    <div class="mws-form-row">
                        <label class="mws-form-label">Holiday Name</label>
                        <div class="mws-form-item">
                            @Html.TextBoxFor(model => model.HolidayName, new { @class = "large" })
                            @Html.ValidationMessageFor(model => model.HolidayName)
                        </div>
                    </div>
                    <div class="mws-form-row">
                        <label class="mws-form-label">Holiday Date</label>
                        <div class="mws-form-item">
                            @* <input type="text" id="eventdate1" value="@evdate.ToString("dd/MM/yyyy")"  class="required datepicker" />*@

                            @Html.TextBoxFor(model => model.HolidayDate, new { @class = "mws-datepicker large" })
                            @Html.ValidationMessageFor(model => model.HolidayDate)
                        </div>
                    </div>

                    <div class="mws-form-row">
                        <label class="mws-form-label">Apply To Staff</label>
                        <div class="mws-form-item">

                            @Html.CheckBox("ApplyToStaff", true)

                        </div>
                    </div>

                </div>
                <div class="mws-button-row ">
                    <input type="submit" class="btn btn-info" value="Save Changes">

                    @Html.ActionLink("Cancel", "Holidays", "Settings", new { @class = "btn" })
                </div>
            }

        </div>
    </div>

</div>


